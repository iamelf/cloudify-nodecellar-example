tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.1rc2/types.yaml
  - http://www.getcloudify.org/spec/libcloud-plugin/1.1rc2/plugin.yaml

node_types:
  vm_host:
    derived_from: cloudify.libcloud.nodes.Server
    properties:
      cloudify_agent:
        default:
          user: ubuntu
          home_dir: /home/ubuntu
      server:
        default:
          image_name: ami-a73264ce
          size_name: m1.medium
          security_groups: ['node_cellar_sg']

  mongo_database:
    derived_from: cloudify.nodes.DBMS
    properties:
      role:
        description: MongoDB role
      port:
        description: MongoDB port

  nodejs_server:
    derived_from: cloudify.nodes.ApplicationServer

  nodejs_app:
    derived_from: cloudify.nodes.ApplicationModule
    properties:
      app_name:
        description: Application name
        type: string
      startup_script:
        description: Nodejs startup script
        type: string
      git_url:
        description: Web application git url
        type: string
      git_branch:
        description: git branch
        type: string
      base_port:
        description: Web application port
        type: integer
      num_instances:
        description: Number of instances
        type: integer
      env_file_path:
          type: string
          default: ''

relationships:
  nodecellar_connected_to_mongo:
    derived_from: cloudify.relationships.connected_to
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        postconfigure:
          implementation: nodecellar-scripts/postconfigure.py
          inputs: {}

node_templates:
  node_cellar_security_group:
    type: cloudify.libcloud.nodes.SecurityGroup
    properties:
      security_group:
        name: node_cellar_sg
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ nodecellar_app, base_port ] }
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ mongod, port ] }
        - remote_ip_prefix: 0.0.0.0/0
          port: 28017

  floatingip:
    type: cloudify.libcloud.nodes.FloatingIP

  mongod_vm:
    type: vm_host
    instances:
      deploy: 1
    relationships:
      - target: node_cellar_security_group
        type: cloudify.relationships.connected_to

  nodejs_vm:
    type: vm_host
    instances:
      deploy: 1
    relationships:
      - target: floatingip
        type: cloudify.libcloud.server_connected_to_floating_ip
      - target: node_cellar_security_group
        type: cloudify.relationships.connected_to

  mongod:
    type: mongo_database
    properties:
      role: mongod
      port: 27017
    interfaces:
      cloudify.interfaces.lifecycle:
        create: mongo-scripts/install-mongo.sh
        start: mongo-scripts/start-mongo.sh
        stop: mongo-scripts/stop-mongo.sh
    relationships:
      - target: mongod_vm
        type: cloudify.relationships.contained_in

  nodejs:
    type: nodejs_server
    interfaces:
      cloudify.interfaces.lifecycle:
        create: nodejs-scripts/install-nodejs.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs_vm

  nodecellar_app:
    type: nodejs_app
    properties:
      app_name: nodecellar
      startup_script: server.js
      git_url: https://github.com/cloudify-cosmo/nodecellar.git
      git_branch: master
      base_port: 8080
      num_instances: 1
    interfaces:
      cloudify.interfaces.lifecycle:
        create: nodejs-scripts/install-app.sh
        start: nodejs-scripts/start-app.sh
        stop: nodejs-scripts/stop-app.sh
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs
      - type: nodecellar_connected_to_mongo
        target: mongod

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodejs_vm, ip ] }
      port: { get_property: [ nodecellar_app, base_port ] }
